package SpellEnergyBarrier
import ShieldBuff
import Entity
import AbilityObjEditing
import ChannelSpellPreset
import BuffObjEditing
import TextTagEntity

public constant int BARRIER_SPELL_ID = 'HAnb'
constant int BUFFABIL_ID = 'AAnb'
constant int TRANSFER_ID = 'A000'

public class BarrierBuff extends NormalShieldBuff

	construct(UnitEntity victim, real dur, real amount)
		super(victim, dur, BUFFABIL_ID, amount)
		
	override function defenseModifier()
		super.defenseModifier()
		if not done
			new TextTagEntity(victim.pos, vec2(GetRandomReal(-0.2, 0.2), GetRandomReal(10, 15)),blockAmount.toInt().toString() , 10, 2., colorA(74, 174, 67, 140+blockAmount.toInt() div 3))

		
@compiletime function createAbilities()
	// Barrier Buff Herospell
	let hdef = new ChannelSpellPreset("HAnb",4)
	hdef.setDisablesOther(false)
	hdef.setOptions(options.visible, true)
	hdef.setName(0, "HEROSPELL | Nature Barrier Sphere" )
	hdef.setRace(0, "nightelf")
	hdef.setIcon("BTNNatureBarrier")
	hdef.setFollowThroughTime(0.0)

	// Barrier Buff (the icon)
	let bdef = new BuffDefinition("BAnb", "Basl" )
	bdef.setTooltipNormal(0, "|cff31A54AEnergy Barrier")
	bdef.setTooltipNormalExtended(0, "Blocks some damage and increases regeneration.")
	// Barrier Buff Tornado Dummy Ability
	let adef = new AbilityDefinition("AAnb", "Aasl")
	adef.setName(0, "BUFFDUMMY | Barrier Buff (dummy)")
	adef.setTargetsAllowed(0, "self")
	adef.setBuff(1, "BAnb")
	adef.setTarget(0, "Spells\\Sfx\\Barrier.mdx")
	
