package HeroTumor
//import Hero
//import SpellCyst
//import EventHandling
//import LinkedList
//import EntityRegion
//
//constant real RADIUS = 64.
//constant int ID = 'Htmr'
//
//
//constant int SPELL_CYST_ID = 'A003'
//
//// Burkitt
//public class HeroTumor extends Hero
//	LinkedList<Cyst> cysts = new LinkedList<Cyst>()
//	effect blightEffect
//	boolean onBlight = false
//	
//	construct(vec3 pos, player owner)
//		super(pos, RADIUS, CreateUnit(owner, ID, pos.x, pos.y, 0.))
//		debugPrint("created", 2)
//		actor.registerCastEvent(Condition(function HeroTumor.onCast))
//		print("registered")
//		
//		
//	static function onCast() returns boolean
//		debugPrint("casted", 2)
//		var caster = GetSpellAbilityUnit()
//		var data = caster.getUserData() castTo HeroTumor
//		var id = GetSpellAbilityId()
//		var tx = GetSpellTargetX()
//		var ty = GetSpellTargetY()
//		AddSpecialEffect("war3mapImported\\InvokerRUnes.mdx", data.pos.x, data.pos.y).destr()
//		switch id
//			case SPELL_CYST_ID
//				debugPrint("casted cyst", 2)
//				let spellLvl = GetUnitAbilityLevel(caster, SPELL_CYST_ID)
//				
//				if spellLvl + 2 > data.cysts.size
//					data.cysts.add(new Cyst(vec3(tx, ty, 0.), data.owner))
//					
//		return false
//		
//	override function update()
//		super.update()
//		if IsPointBlighted(pos.x, pos.y)
//			if not onBlight
//				onBlight = true
//				blightEffect = AddSpecialEffectTarget("Heros\\Sfx\\BlightParticles.mdx", actor, "chest")
//		else if onBlight
//			onBlight = false
//			blightEffect.destr()
//			
//		print((getEntityRegion(pos)castTo int).toString())
//